article:
  title: 基本的なファイルの構造
  content:
    - |
      最小（に近い）構成の moddl ファイルの例を以下に示します：

      ```
      // minimum.moddl
      @tempo 120
      @instrument ^a, sineOsc * adsrEnv

      a o4l4
      a cdefgab>c2
      ```

      ## 文

      ModDL プログラムは**文**を並べたもので構成されています。
      
      文には「一般文」と「MML 文」の 2 種類があります。

      文と文の境界は、行末です。ただし、一定の条件下で複数行にまたがって文を続けることができます。

      ### 一般文

      `@` で始まる行は**一般文**を表します。
      一般文の機能は、演奏に関する設定や、トラックや変数の定義、その他多岐にわたっています。

      一般文の一般的な形式は以下の通りです：

      ```
      @<name> [<arg>[, <arg>[, ...]]]
      ```

      ここで `name` は文の名前（種類）、`arg` は文の引数となる式です。文の種類によって引数の数と型が異なります。

      上掲の `minimum.moddl` の 2 つの一般文は、それぞれ次のような意味を持っています：

      * `@tempo 120` は、曲の初期テンポを 120 bpm に設定する
      * `@instrument ^a, sineOsc * adsrEnv` は、トラック `a` にインストゥルメントを割り当てる。インストゥルメントの構造は、正弦波のオシレータに ADSR エンベロープを適用したもの

      一般文をその種類によって呼ぶことがあります。たとえば `@tempo` で始まる文を「tempo 文」と呼んだりします。

      ### MML 文

      `@` で始まらない行は **MML 文**を表します。

      MML 文は、指定したトラックに対して MML を割り当てます。

      **MML** はトラックの時間的な変化を定義するもので、概ね「譜面」に相当します。

      MML 文の一般的な形式は以下の通りです：

      ```
      <tracks> <mml>
      ```

      ここで、`tracks` は MML を割り当てる対象のトラックです。`abc` のように、複数のトラックを一度に指定することもできます。

      `mml` は複数行に分けることができます。トラックに最終的に割り当てられる MML は、そのトラックを対象とする全ての MML 文の `mml` の内容をつないだものになります。

      ```
      // minimum_delay.moddl
      @tempo 120
      @instrument ^ab, sineOsc * adsrEnv

      ab o4l4
      b v8 r8.
      ab cdefgab>c2
      ```

      * トラック `a` に割り当たる MML は `o4l4cdefgab>c2`
      * トラック `b` に割り当たる MML は `o4l4v8 r8.cdefgab>c2`

      ## コメント

      コメントはプログラムの動作には一切影響しません。コメントには以下の 2 種類があります：

      * `//` から行の終わりまでは**行コメント**となります。
      * `/*` から直近の `*/` までは**範囲コメント**となります。範囲コメントは複数行にまたがることができます。
