function:
  name: waveMap
  desc: |
    波形を表現した配列を受け取り、配列に含まれるサンプルを関数によって変換し、新たな配列を得ます。
    
    変換の際はループを考慮し、ループの構造については保持したまま、含まれるサンプルのみを変換します。

  params:
    -
      name: '`waveformData`'
      type: (Number | Number[])[]
      required: true
      desc: |
        波形データを表す配列。
    -
      name: '`mapper`'
      type: Number -> Number
      required: true
      desc: |
        波形データのサンプルを変換する関数。

  value:
    type: (Number | Number[])[]
    desc: |
      波形データを変換した配列。

  examples:
    - |
      ```
      [0, 1, 2, 3, 4, 5, 6, 7, 8]~waveMap(x -> -x)
      // ==> [0, -1, -2, -3, -4, -5, -6, -7, -8]

      [0, 1, 2, 3, 4, [5, 6, 7, 8]]~waveMap(x -> -x)
      // ==> [0, -1, -2, -3, -4, [-5, -6, -7, -8]]
      ```

# TODO map に言及

#   details:
#     - |
#       与えられた配列に含まれる数値に関数を適用して変換し、新たな配列を得ます。
# 
#       与えられた配列にさらに配列が含まれる場合、その配列に含まれる数値を同様に変換しつつ、ネストした配列の構造は保持します。
# 
#       この関数は、配列で表現された波形に対して、ループを考慮しつつ変換を施すことを想定したものです。
