nodeFactory:
  name: adsrEnv
  desc: |
    アタックタイム・ディケイタイム・サステインレベル・リリースタイムの 4 つのパラメータで制御されるエンベロープです。

    ModDL では、さらに初期レベルのパラメータを追加しています。

  input: |
    %noInput

  params:
    -
      name: attack
      default:
        value: 0
      desc: |
        アタックタイムです。
        ノートオン後、出力値が 1 になるまでの時間を秒で指定します。
    -
      name: decay
      default:
        value: 0
      desc: |
        ディケイタイムです。
        アタックタイム経過後、値がサステインレベルに変化するまでの時間を秒で指定します。
    -
      name: sustain
      default:
        value: 1
      desc: |
        サステインレベルです。
        アタックタイム・ディケイタイム経過後の出力値を指定します。
    -
      name: release
      default:
        value: 0
      desc: |
        リリースタイムです。
        ノートオフ後、出力値が 0 になるまでの時間を秒で設定します。
    -
      name: initial
      default:
        value: 1
      desc: |
        初期レベルです。
        ノートオンの瞬間のレベルを指定します。

  events:
    -
      type: Note
      # key:
      desc: ノートオンでアタックを開始し、ノートオフでリリースを開始します。

  output:
    range: |
      [0, 1]
    desc: |
      ノートオン/オフからの時間に応じたエンベロープの振幅を出力します。

  details:
    - |
      ノートオンの瞬間 `initial` を出力します。

      そこから出力は線形に増加し、`attack` 秒後に最大値 1 を出力します。

      その後 `decay` 秒をかけて、出力は線形に `sustain` まで減少します。

      ノートオフを受け取ると、その瞬間から `release` 秒をかけて出力は線形に減少し、その後 0 になります。

      <img src="./adsrEnv.png" width=50%>

    -
      sample:
        code: |
          pulseOsc * adsrEnv { attack: 0.5, release: 0.25 }
        desc: |
          オシレータに対してエンベロープを適用します。
    -
      # TODO この注意は全てのエンベロープに共通なので部品化したい
      caution:
        -
          次のように、エンベロープをパイプで接続しないでください：
        -
          sample:
            bad: true
            code: |
              pulseOsc | adsrEnv { attack: 0.5, release: 0.25 }
            desc: |
              オシレータの出力にエンベロープを適用することを意図していますが、そうはなりません。
        - |
          エンベロープは「入力にエンベロープを適用するエフェクト」ではなく、「エンベロープを出力するジェネレータ」であり、入力を取りません。
          エンベロープをエフェクトのように接続すると、オシレータの出力は無視され、結果として出力は単なるエンベロープの値になってしまいます（音としては聞こえません）。
          エンベロープを適用するには `*` を使ってください。
