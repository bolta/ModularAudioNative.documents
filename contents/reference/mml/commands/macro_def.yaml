mmlCommand:
  name: |
    \@$
  desc: |
    マクロを定義します。
  format: |
    `@$`\<name>`[`\<commands>`]`
  params:
    -
      name: name
      type: Identifier
      required: true
      desc: |
        定義するマクロの名前を指定します。
    -
      name: commands
      type: Commands
      required: true
      desc: |
        マクロの定義となるコマンド列を指定します。

  details: |
    マクロを定義する際に参照される音長やオクターブは、定義の内部で変更しない限りは、定義の外側のものです。ただし、commands の中でそれらの値を変更しても、定義の外側には影響しません。

    ```
    a o4l8
    a @$m1 [
        a ceg>c< // o4l8 が参照されるため、o4c8e8g8o5c8 と等価
        a o6l16
        a ceg>c // o6c16e16g16o7c と等価
    a ]

    a cde // o4c8d8e8 と等価。o7c16d16e16 ではない

    a o3l1
    a $m1 // o4c8e8g8o5c8 ... と等価。o3c1e1g1o4c1 ... ではない
    ```

    定義したマクロが有効となる範囲は、マクロを定義した後の同一トラック内のみです。ただし、複数トラックで一括してマクロを定義することで、複数トラックで同じマクロを有効にすることができます。

    このとき、マクロを定義する全てのトラックで事前に音長やオクターブを（意図的にずらす場合を除き）揃えておく必要があります。そうしないと、トラックごとに異なる内容でマクロが定義されることになります。

    ```
    abc o4l8 // オクターブと音長を揃えておく
    abc @$m1 [ ... ]

    abc $m1 // トラック abc の全てでマクロ m1 を使える
    ```
